# Generated by Django 4.2 on 2023-06-22 07:24

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Machine",
            fields=[
                ("name", models.CharField(max_length=30)),
                ("date_created", models.DateTimeField(auto_now_add=True)),
                (
                    "last_trained",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("mark", models.IntegerField(default=0)),
                (
                    "unid",
                    models.CharField(
                        default=uuid.uuid4,
                        editable=False,
                        max_length=255,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("prev_unid", models.CharField(default="0", max_length=255)),
                ("marked_for_delete", models.BooleanField(default=False)),
                (
                    "num_layers",
                    models.IntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(50),
                        ],
                    ),
                ),
                (
                    "first_layer_neurons",
                    models.IntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                    ),
                ),
                (
                    "last_layer_neurons",
                    models.IntegerField(
                        default=5,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(1000),
                        ],
                    ),
                ),
                (
                    "dropout_period",
                    models.IntegerField(
                        default=51,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(51),
                        ],
                    ),
                ),
                (
                    "dropout_frequency",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                    ),
                ),
                (
                    "max_norm",
                    models.FloatField(
                        default=99.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(99.0),
                        ],
                    ),
                ),
                (
                    "l1",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(99.0),
                        ],
                    ),
                ),
                (
                    "l2",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(99.0),
                        ],
                    ),
                ),
                (
                    "optimizer",
                    models.CharField(
                        choices=[
                            ("adam", "ADAM"),
                            ("nadam", "NADAM"),
                            ("adamax", "ADAMAX"),
                            ("adagrad", "ADAGRAD"),
                            ("rmsprop", "RMSPROP"),
                            ("sgd", "SGD"),
                        ],
                        default="adam",
                        max_length=30,
                    ),
                ),
                (
                    "loss",
                    models.CharField(
                        choices=[
                            ("mean_squared_error", "MEAN SQUARED ERROR"),
                            ("mean_absolute_error", "MEAN ABSOLUTE ERROR"),
                            (
                                "mean_squared_logarithmic_error",
                                "MEAN SQUARED LOGARITHMIC ERROR",
                            ),
                        ],
                        default="mean_squared_error",
                        max_length=30,
                    ),
                ),
                (
                    "activation",
                    models.CharField(
                        choices=[
                            ("relu", "RELU"),
                            ("sigmoid", "SIGMOID"),
                            ("softmax", "SOFTMAX"),
                            ("tanh", "TANH"),
                            ("selu", "SELU"),
                            ("elu", "ELU"),
                            ("EXPONENTIAL", "exponential"),
                        ],
                        default="relu",
                        max_length=30,
                    ),
                ),
                (
                    "kernel_initializer",
                    models.CharField(
                        choices=[
                            ("random_normal", "RANDOM NORMAL"),
                            ("random_uniform", "RANDOM UNIFORM"),
                            ("truncated_normal", "TRUNCATED NORMAL"),
                            ("zeros", "ZEROS"),
                            ("ones", "ONES"),
                            ("glorot_normal", "GLOROT NORMAL"),
                            ("glorot_uniform", "GLOROT UNIFORM"),
                            ("he_normal", "HE NORMAL"),
                            ("he_uniform", "HE UNIFORM"),
                            ("identity", "IDENTITY"),
                            ("orthogonal", "ORTHOGONAL"),
                        ],
                        default="random_normal",
                        max_length=30,
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Training",
            fields=[
                (
                    "pkid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("time", models.TimeField(auto_now_add=True)),
                ("new_pk", models.CharField(default=uuid.uuid4, max_length=255)),
                ("num", models.IntegerField(default=1000)),
                ("it", models.IntegerField(default=10)),
                ("n_epochs", models.IntegerField(default=10)),
                ("btc_size", models.IntegerField(default=32)),
                ("learning_rate", models.FloatField(default=0.001)),
                ("shuffle", models.BooleanField(default=True)),
                ("loss", models.FloatField(default=99.0)),
                ("status", models.CharField(default="QUE", max_length=30)),
                (
                    "machine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="poker_royale.machine",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "pkid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(default="No-Name", max_length=30)),
                (
                    "max_players",
                    models.IntegerField(
                        default=2,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(6),
                        ],
                    ),
                ),
                ("num_players", models.IntegerField(default=1)),
                (
                    "entry_cost",
                    models.IntegerField(
                        default=10,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10000),
                        ],
                    ),
                ),
                (
                    "number_of_games",
                    models.IntegerField(
                        default=1000,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100000),
                        ],
                    ),
                ),
                ("status", models.CharField(default="WAITING", max_length=30)),
                ("time", models.TimeField(auto_now_add=True)),
                ("final_dif", models.IntegerField(default=0)),
                ("marked_for_close", models.BooleanField(default=False)),
                ("spar", models.BooleanField(default=False)),
                (
                    "plot",
                    models.ImageField(default="default.png", upload_to="lifter-out"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "m1",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contender",
                        to="poker_royale.machine",
                    ),
                ),
                (
                    "m2",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="challenger",
                        to="poker_royale.machine",
                    ),
                ),
            ],
        ),
    ]
